const pressToPlay = document.getElementById("press-to-play");
import Dino from './dino.min.js';
let image;
let levelZones = [];
if(localStorage.getItem("level") === null) {
    localStorage.setItem("level", 0);
}
class Levels extends Phaser.Scene {

    constructor() {
        super('Levels');
        pressToPlay.style.display = "none";
    }

    // Atlas generated by https://gammafp.github.io/atlas-packer-phaser/editor
    preload() {
        this.load.image("levels", "./src/assets/levels.png");
        this.load.image("train", "./src/assets/train.png");
    }

    create() {
        const changeScene = (level = 1, highScore = 250, speed = 1, cactusSpawn = [10000, 4000]) => {
            console.log(level + " " + (parseInt(localStorage.getItem("level")) + 1));
            if(level <= parseInt(localStorage.getItem("level")) + 1) {
                pressToPlay.style.display = "block";
                this.scene.start("Dino", {
                    speed: speed,
                    cactusSpawn: cactusSpawn,
                    desiredScore: highScore,
                    currentLevel: level
                });
            }
            else {
                alert("This level is not yet available to you!")
            }
        }
        image = this.add.image(500, 500, 'levels');

        levelZones.push(this.add.zone(50, 140, 100, 100).setDropZone());
        levelZones.push(this.add.zone(195, 140, 200, 100).setDropZone());
        levelZones.push(this.add.zone(450, 140, 100, 100).setDropZone());
        levelZones.push(this.add.zone(640, 140, 100, 100).setDropZone());
        levelZones.push(this.add.zone(800, 140, 100, 100).setDropZone());

        levelZones.push(this.add.zone(50, 270, 100, 100).setDropZone());
        levelZones.push(this.add.zone(230, 270, 100, 100).setDropZone());
        levelZones.push(this.add.zone(450, 270, 100, 100).setDropZone());
        levelZones.push(this.add.zone(640, 270, 100, 100).setDropZone());
        levelZones.push(this.add.zone(800, 270, 100, 100).setDropZone());

        levelZones.push(this.add.zone(50, 390, 100, 100).setDropZone());
        levelZones.push(this.add.zone(230, 390, 100, 100).setDropZone());
        levelZones.push(this.add.zone(450, 390, 100, 100).setDropZone());
        levelZones.push(this.add.zone(640, 390, 100, 100).setDropZone());
        levelZones.push(this.add.zone(800, 390, 100, 100).setDropZone());

        levelZones.push(this.add.zone(50, 510, 100, 100).setDropZone());
        levelZones.push(this.add.zone(240, 510, 100, 100).setDropZone());
        levelZones.push(this.add.zone(450, 510, 100, 100).setDropZone());
        levelZones.push(this.add.zone(640, 510, 100, 100).setDropZone());
        levelZones.push(this.add.zone(800, 510, 100, 100).setDropZone());

        switch (parseInt(localStorage.getItem("level"))) {
            case 0:
                this.add.image(50, 140, "train");
                break;
            case 1:
                this.add.image(195, 140, "train");
                break;
            case 2:
                this.add.image(450, 140, "train");
                break;
            case 3:
                this.add.image(640, 140, "train");
                break;
            case 4:
                this.add.image(800, 140, "train");
                break;
            case 5:
                this.add.image(50, 270, "train");
                break;
            case 6:
                this.add.image(230, 270, "train");
                break;
            case 7:
                this.add.image(450, 270, "train");
                break;
            case 8:
                this.add.image(640, 270, "train");
                break;
            case 9:
                this.add.image(800, 270, "train");
                break;
            case 10:
                this.add.image(50, 390, "train");
                break;
            case 11:
                this.add.image(230, 390, "train");
                break;
            case 12:
                this.add.image(450, 390, "train");
                break;
            case 13:
                this.add.image(640, 390, "train");
                break;
            case 14:
                this.add.image(800, 390, "train");
                break;
            case 15:
                this.add.image(50, 510, "train");
                break;
            case 16:
                this.add.image(240, 510, "train");
                break;
            case 17:
                this.add.image(450, 510, "train");
                break;
            case 18:
                this.add.image(640, 510, "train");
                break;
            case 19:
                this.add.image(800, 510, "train");
                break;
            default:
                alert("ðŸ’€ Unexpected Error!");
                break;
        }

        this.input.setPollAlways();

        levelZones.forEach((showZone) => {
            var graphics = this.add.graphics();
            var color = 0xffff00;
            graphics.lineStyle(2, color);
            graphics.strokeRect(showZone.x + showZone.input.hitArea.x, showZone.y + showZone.input.hitArea.y, showZone.input.hitArea.width, showZone.input.hitArea.height);
        });

        levelZones[0].on('pointerdown', function () {
                changeScene(1);
        });
        levelZones[1].on('pointerdown', function() {
                changeScene(2, 350, 1.5, [15000, 4000]);
        });
        levelZones[2].on('pointerdown', function() {
            changeScene(3, 450, 2.5, [15000, 4000]);
        });
        levelZones[3].on('pointerdown', function() {
            changeScene(4, 550, 3.5, [15000, 4000]);
        });
        levelZones[4].on('pointerdown', function() {
            changeScene(5, 650, 4.5, [15000, 4000]);
        });
        levelZones[5].on('pointerdown', function() {
            changeScene(6, 650, 4.5, [15000, 4000]);
        });
        levelZones[6].on('pointerdown', function() {
            changeScene(7, 650, 4.5, [15000, 4000]);
        });
        levelZones[7].on('pointerdown', function() {
            changeScene(8, 650, 4.5, [15000, 4000]);
        });
        levelZones[8].on('pointerdown', function() {
            changeScene(9, 650, 4.5, [15000, 4000]);
        });
        levelZones[9].on('pointerdown', function() {
            changeScene(10, 650, 4.5, [15000, 4000]);
        });
        levelZones[10].on('pointerdown', function() {
            changeScene(11, 650, 4.5, [15000, 4000]);
        });
        levelZones[11].on('pointerdown', function() {
            changeScene(12, 650, 4.5, [15000, 4000]);
        });
        levelZones[12].on('pointerdown', function() {
            changeScene(13, 650, 4.5, [15000, 4000]);
        });
        levelZones[13].on('pointerdown', function() {
            changeScene(14, 650, 4.5, [15000, 4000]);
        });
        levelZones[14].on('pointerdown', function() {
            changeScene(15, 650, 4.5, [15000, 4000]);
        });
        levelZones[15].on('pointerdown', function() {
            changeScene(16, 650, 4.5, [15000, 4000]);
        });
        levelZones[16].on('pointerdown', function() {
            changeScene(17, 650, 4.5, [15000, 4000]);
        });
        levelZones[17].on('pointerdown', function() {
            changeScene(18, 650, 4.5, [15000, 4000]);
        });
        levelZones[18].on('pointerdown', function() {
            changeScene(19, 650, 4.5, [15000, 4000]);
        });
        levelZones[19].on('pointerdown', function() {
            changeScene(20, 650, 4.5, [15000, 4000]);
        });
    }

    update(time, delta) {
    }

}

export default Levels;